version: '3'
services:

  zookeeper:
    image: confluentinc/cp-zookeeper:7.7.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.7.1
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  elasticsearch:
      image: docker.elastic.co/elasticsearch/elasticsearch:7.17.0
      container_name: elasticsearch
      environment:
        - discovery.type=single-node
        - xpack.security.enabled=false
      ports:
        - "9200:9200"
        - "9300:9300"
        
  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.0
    container_name: kibana
    depends_on:
      - elasticsearch
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
    ports:
      - "5601:5601"

  # sqlserver:
  #   image: mcr.microsoft.com/mssql/server:2022-latest
  #   environment:
  #     - ACCEPT_EULA=Y
  #     - MSSQL_SA_PASSWORD=Password1*
  #   ports:
  #     - "1433:1433"

  # backend:
  #     build:
  #       context: .
  #       dockerfile: PermissionsAPI/Dockerfile
  #     environment:
  #       - MSSQL_SA_PASSWORD=Password1*
  #       - ASPNETCORE_ENVIRONMENT=Development
  #       - BOOTSTRAP_SERVERS=kafka:9092
  #     ports:
  #       - "5000:8080"
  #     depends_on:
  #       - kafka
  #       - kibana
  #       - sqlserver

# # Vol√∫menes persistentes para SQL Server
# volumes:
#   sqlserver_data: